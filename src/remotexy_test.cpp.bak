/*
   -- New project --

   This source code of graphical user interface
   has been generated automatically by RemoteXY editor.
   To compile this code using RemoteXY library 3.1.13 or later version
   download by link http://remotexy.com/en/library/
   To connect using RemoteXY mobile app by link http://remotexy.com/en/download/
     - for ANDROID 4.13.13 or later version;
     - for iOS 1.10.3 or later version;

   This source code is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.
*/

//////////////////////////////////////////////
//        RemoteXY include library          //
//////////////////////////////////////////////

// you can enable debug logging to Serial at 115200
//#define REMOTEXY__DEBUGLOG

// RemoteXY select connection mode and include library
#define REMOTEXY_MODE__NRFCORE_BLEPERIPHERAL

#include <BLEPeripheral.h>

// RemoteXY connection settings
#define REMOTEXY_BLUETOOTH_NAME "RemoteXYtest"


#include <RemoteXY.h>

// RemoteXY GUI configuration
#pragma pack(push, 1)
uint8_t RemoteXY_CONF[] =   // 67 bytes
  { 255,4,0,0,0,60,0,17,0,0,0,31,2,106,200,200,84,1,1,3,
  0,5,23,61,60,60,144,37,39,39,32,2,26,31,10,3,25,24,24,37,
  24,15,15,48,4,26,31,79,78,0,31,79,70,70,0,3,29,6,44,16,
  78,7,41,15,131,2,26 };

// this structure defines all the variables and events of your control interface
struct {

    // input variables
  int8_t joystick_01_x; // from -100 to 100
  int8_t joystick_01_y; // from -100 to 100
  uint8_t pushSwitch_01; // =1 if state is ON, else =0
  uint8_t select_01; // from 0 to 3

    // other variable
  uint8_t connect_flag;  // =1 if wire connected, else =0

} RemoteXY;
#pragma pack(pop)

/////////////////////////////////////////////
//           END RemoteXY include          //
/////////////////////////////////////////////



void setup()
{
  RemoteXY_Init ();


  // TODO you setup code

}

void loop()
{
  RemoteXY_Handler ();


  // TODO you loop code
  // use the RemoteXY structure for data transfer
  // do not call delay(), use instead RemoteXY_delay()


}
